// Code generated by protoc-gen-go-oneof. DO NOT EDIT.
// versions:
// 	protoc-gen-go-oneof (devel)
// 	protoc              (unknown)
// source: example/v1/world.proto

package examplev1

// OneofWorldOrangeColor can contain one of the value for World_Orange.color.
//
// Use the constructor for each oneof fields.
//
//   - func OneofWorldOrangeColor_Red(red string) OneofWorldOrangeColor
//   - func OneofWorldOrangeColor_Blue(blue bool) OneofWorldOrangeColor
//   - func OneofWorldOrangeColor_Orange(orange *World_Orange) OneofWorldOrangeColor
type OneofWorldOrangeColor struct {
	oneof isWorld_Orange_Color
}

// Get returns the value for World_Orange.color.
func (color OneofWorldOrangeColor) Get() isWorld_Orange_Color {
	return color.oneof
}

// OneofWorldOrangeColorFrom returns OneofWorldOrangeColor from the value of isWorld_Orange_Color.
func OneofWorldOrangeColorFrom(color isWorld_Orange_Color) OneofWorldOrangeColor {
	return OneofWorldOrangeColor{oneof: color}
}

// OneofWorldOrangeColor_Red returns OneofWorldOrangeColor.
func OneofWorldOrangeColor_Red(red string) OneofWorldOrangeColor {
	return OneofWorldOrangeColor{oneof: &World_Orange_Red{Red: red}}
}

// OneofWorldOrangeColor_Blue returns OneofWorldOrangeColor.
func OneofWorldOrangeColor_Blue(blue bool) OneofWorldOrangeColor {
	return OneofWorldOrangeColor{oneof: &World_Orange_Blue{Blue: blue}}
}

// OneofWorldOrangeColor_Orange returns OneofWorldOrangeColor.
func OneofWorldOrangeColor_Orange(orange *World_Orange) OneofWorldOrangeColor {
	return OneofWorldOrangeColor{oneof: &World_Orange_Orange{Orange: orange}}
}

type OneofWorldOrangeColorKind string

const (
	OneofWorldOrangeColorIsUnknown OneofWorldOrangeColorKind = "unknown"
	OneofWorldOrangeColorIsNil     OneofWorldOrangeColorKind = "nil"
	OneofWorldOrangeColorIsRed     OneofWorldOrangeColorKind = "red"
	OneofWorldOrangeColorIsBlue    OneofWorldOrangeColorKind = "blue"
	OneofWorldOrangeColorIsOrange  OneofWorldOrangeColorKind = "orange"
)

func OneofWorldOrangeColorKindOf(color isWorld_Orange_Color) OneofWorldOrangeColorKind {
	if color == nil {
		return OneofWorldOrangeColorIsNil
	}
	switch color.(type) {
	case *World_Orange_Red:
		return OneofWorldOrangeColorIsRed
	case *World_Orange_Blue:
		return OneofWorldOrangeColorIsBlue
	case *World_Orange_Orange:
		return OneofWorldOrangeColorIsOrange
	}
	return OneofWorldOrangeColorIsUnknown
}
